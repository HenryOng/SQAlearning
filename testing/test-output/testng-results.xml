<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="32" passed="32">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="87" started-at="2014-09-19T02:42:22Z" finished-at="2014-09-19T02:42:22Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="87" started-at="2014-09-19T02:42:22Z" finished-at="2014-09-19T02:42:22Z">
      <class name="testNg.CalculatorTestNg">
        <test-method status="PASS" signature="testAdd()[pri:0, instance:testNg.CalculatorTestNg@318c6fd4]" name="testAdd" duration-ms="6" started-at="2014-09-18T19:42:22Z" finished-at="2014-09-18T19:42:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
      </class> <!-- testNg.CalculatorTestNg -->
      <class name="testNg.TestDependency">
        <test-method status="PASS" signature="initEnvironmentTest()[pri:0, instance:testNg.TestDependency@3847ca2a]" name="initEnvironmentTest" duration-ms="1" started-at="2014-09-18T19:42:22Z" finished-at="2014-09-18T19:42:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initEnvironmentTest -->
        <test-method status="PASS" signature="testSalutationMessage()[pri:0, instance:testNg.TestDependency@3847ca2a]" name="testSalutationMessage" duration-ms="1" started-at="2014-09-18T19:42:22Z" depends-on-methods="testNg.TestDependency.initEnvironmentTest" finished-at="2014-09-18T19:42:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSalutationMessage -->
      </class> <!-- testNg.TestDependency -->
      <class name="testNg.TestingTestNgLifeCycle">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:testNg.TestingTestNgLifeCycle@3d8c4d8e]" name="beforeSuite" is-config="true" duration-ms="8" started-at="2014-09-18T19:42:22Z" finished-at="2014-09-18T19:42:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testNg.TestingTestNgLifeCycle@3d8c4d8e]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2014-09-18T19:42:22Z" finished-at="2014-09-18T19:42:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:testNg.TestingTestNgLifeCycle@3d8c4d8e]" name="beforeClass" is-config="true" duration-ms="0" started-at="2014-09-18T19:42:22Z" finished-at="2014-09-18T19:42:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="Case2()[pri:0, instance:testNg.TestingTestNgLifeCycle@3d8c4d8e]" name="Case2" duration-ms="1" started-at="2014-09-18T19:42:22Z" finished-at="2014-09-18T19:42:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Case2 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testNg.TestingTestNgLifeCycle@3d8c4d8e]" name="afterMethod" is-config="true" duration-ms="0" started-at="2014-09-18T19:42:22Z" finished-at="2014-09-18T19:42:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testNg.TestingTestNgLifeCycle@3d8c4d8e]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2014-09-18T19:42:22Z" finished-at="2014-09-18T19:42:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testCase1()[pri:0, instance:testNg.TestingTestNgLifeCycle@3d8c4d8e]" name="testCase1" duration-ms="1" started-at="2014-09-18T19:42:22Z" finished-at="2014-09-18T19:42:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase1 -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testNg.TestingTestNgLifeCycle@3d8c4d8e]" name="afterClass" is-config="true" duration-ms="0" started-at="2014-09-18T19:42:22Z" finished-at="2014-09-18T19:42:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testNg.TestingTestNgLifeCycle@3d8c4d8e]" name="afterMethod" is-config="true" duration-ms="0" started-at="2014-09-18T19:42:22Z" finished-at="2014-09-18T19:42:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:testNg.TestingTestNgLifeCycle@3d8c4d8e]" name="afterTest" is-config="true" duration-ms="1" started-at="2014-09-18T19:42:22Z" finished-at="2014-09-18T19:42:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:testNg.TestingTestNgLifeCycle@3d8c4d8e]" name="afterSuite" is-config="true" duration-ms="0" started-at="2014-09-18T19:42:22Z" finished-at="2014-09-18T19:42:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- testNg.TestingTestNgLifeCycle -->
      <class name="testNg.TestNGSimpleTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:testNg.TestNGSimpleTest@3e1283d2]" name="beforeTest" is-config="true" duration-ms="1" started-at="2014-09-18T19:42:22Z" finished-at="2014-09-18T19:42:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:testNg.TestingTestNgLifeCycle@3d8c4d8e]" name="beforeTest" is-config="true" duration-ms="0" started-at="2014-09-18T19:42:22Z" finished-at="2014-09-18T19:42:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="testInvocationTest()[pri:0, instance:testNg.TestNGSimpleTest@3e1283d2]" name="testInvocationTest" duration-ms="6" started-at="2014-09-18T19:42:22Z" finished-at="2014-09-18T19:42:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvocationTest -->
        <test-method status="PASS" signature="testMsg()[pri:0, instance:testNg.TestNGSimpleTest@3e1283d2]" name="testMsg" duration-ms="1" started-at="2014-09-18T19:42:22Z" finished-at="2014-09-18T19:42:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMsg -->
        <test-method status="PASS" signature="testNullPointerException()[pri:0, instance:testNg.TestNGSimpleTest@3e1283d2]" name="testNullPointerException" duration-ms="1" started-at="2014-09-18T19:42:22Z" finished-at="2014-09-18T19:42:22Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at testNg.TestNGSimpleTest.testNullPointerException(TestNGSimpleTest.java:40)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNullPointerException -->
        <test-method status="PASS" signature="testPercentageTest()[pri:0, instance:testNg.TestNGSimpleTest@3e1283d2]" name="testPercentageTest" duration-ms="1" started-at="2014-09-18T19:42:22Z" finished-at="2014-09-18T19:42:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPercentageTest -->
        <test-method status="SUCCESS_PERCENTAGE_FAILURE" signature="testPercentageTest()[pri:0, instance:testNg.TestNGSimpleTest@3e1283d2]" name="testPercentageTest" duration-ms="1" started-at="2014-09-18T19:42:22Z" finished-at="2014-09-18T19:42:22Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.fail(Assert.java:101)
	at testNg.TestNGSimpleTest.testPercentageTest(TestNGSimpleTest.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPercentageTest -->
        <test-method status="PASS" signature="testPercentageTest()[pri:0, instance:testNg.TestNGSimpleTest@3e1283d2]" name="testPercentageTest" duration-ms="0" started-at="2014-09-18T19:42:22Z" finished-at="2014-09-18T19:42:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPercentageTest -->
        <test-method status="PASS" signature="testPercentageTest()[pri:0, instance:testNg.TestNGSimpleTest@3e1283d2]" name="testPercentageTest" duration-ms="0" started-at="2014-09-18T19:42:22Z" finished-at="2014-09-18T19:42:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPercentageTest -->
        <test-method status="PASS" signature="testPercentageTest()[pri:0, instance:testNg.TestNGSimpleTest@3e1283d2]" name="testPercentageTest" duration-ms="0" started-at="2014-09-18T19:42:22Z" finished-at="2014-09-18T19:42:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPercentageTest -->
        <test-method status="PASS" signature="testPercentageTest()[pri:0, instance:testNg.TestNGSimpleTest@3e1283d2]" name="testPercentageTest" duration-ms="1" started-at="2014-09-18T19:42:22Z" finished-at="2014-09-18T19:42:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPercentageTest -->
        <test-method status="PASS" signature="testPercentageTest()[pri:0, instance:testNg.TestNGSimpleTest@3e1283d2]" name="testPercentageTest" duration-ms="1" started-at="2014-09-18T19:42:22Z" finished-at="2014-09-18T19:42:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPercentageTest -->
        <test-method status="PASS" signature="testPercentageTest()[pri:0, instance:testNg.TestNGSimpleTest@3e1283d2]" name="testPercentageTest" duration-ms="0" started-at="2014-09-18T19:42:22Z" finished-at="2014-09-18T19:42:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPercentageTest -->
        <test-method status="PASS" signature="testPercentageTest()[pri:0, instance:testNg.TestNGSimpleTest@3e1283d2]" name="testPercentageTest" duration-ms="0" started-at="2014-09-18T19:42:22Z" finished-at="2014-09-18T19:42:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPercentageTest -->
        <test-method status="PASS" signature="testPercentageTest()[pri:0, instance:testNg.TestNGSimpleTest@3e1283d2]" name="testPercentageTest" duration-ms="0" started-at="2014-09-18T19:42:22Z" finished-at="2014-09-18T19:42:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPercentageTest -->
      </class> <!-- testNg.TestNGSimpleTest -->
      <class name="testNg.FruitTest">
        <test-method status="PASS" signature="appleNameTest()[pri:0, instance:testNg.FruitTest@7b01e0b5]" name="appleNameTest" duration-ms="0" started-at="2014-09-18T19:42:22Z" finished-at="2014-09-18T19:42:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- appleNameTest -->
        <test-method status="PASS" signature="fruitNameTest()[pri:0, instance:testNg.FruitTest@7b01e0b5]" name="fruitNameTest" duration-ms="1" started-at="2014-09-18T19:42:22Z" finished-at="2014-09-18T19:42:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fruitNameTest -->
      </class> <!-- testNg.FruitTest -->
      <class name="testNg.ParamTestWithDataProvider1">
        <test-method status="PASS" signature="initialize()[pri:0, instance:testNg.ParamTestWithDataProvider1@6d7accc9]" name="initialize" is-config="true" duration-ms="0" started-at="2014-09-18T19:42:22Z" finished-at="2014-09-18T19:42:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd(int, int, int)[pri:0, instance:testNg.ParamTestWithDataProvider1@6d7accc9]" name="testAdd" duration-ms="1" started-at="2014-09-18T19:42:22Z" data-provider="calcTest" finished-at="2014-09-18T19:42:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:testNg.ParamTestWithDataProvider1@6d7accc9]" name="initialize" is-config="true" duration-ms="0" started-at="2014-09-18T19:42:22Z" finished-at="2014-09-18T19:42:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd(int, int, int)[pri:0, instance:testNg.ParamTestWithDataProvider1@6d7accc9]" name="testAdd" duration-ms="1" started-at="2014-09-18T19:42:22Z" data-provider="calcTest" finished-at="2014-09-18T19:42:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="testAdd(int, int, int)[pri:0, instance:testNg.ParamTestWithDataProvider1@6d7accc9]" name="testAdd" duration-ms="1" started-at="2014-09-18T19:42:22Z" data-provider="calcTest" finished-at="2014-09-18T19:42:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[38]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:testNg.ParamTestWithDataProvider1@6d7accc9]" name="initialize" is-config="true" duration-ms="0" started-at="2014-09-18T19:42:22Z" finished-at="2014-09-18T19:42:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd(int, int, int)[pri:0, instance:testNg.ParamTestWithDataProvider1@6d7accc9]" name="testAdd" duration-ms="1" started-at="2014-09-18T19:42:22Z" data-provider="calcTest" finished-at="2014-09-18T19:42:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[44]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:testNg.ParamTestWithDataProvider1@6d7accc9]" name="initialize" is-config="true" duration-ms="0" started-at="2014-09-18T19:42:22Z" finished-at="2014-09-18T19:42:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:testNg.ParamTestWithDataProvider1@6d7accc9]" name="initialize" is-config="true" duration-ms="0" started-at="2014-09-18T19:42:22Z" finished-at="2014-09-18T19:42:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testAdd(int, int, int)[pri:0, instance:testNg.ParamTestWithDataProvider1@6d7accc9]" name="testAdd" duration-ms="1" started-at="2014-09-18T19:42:22Z" data-provider="calcTest" finished-at="2014-09-18T19:42:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[23]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[23]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[46]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:testNg.ParamTestWithDataProvider1@6d7accc9]" name="initialize" is-config="true" duration-ms="1" started-at="2014-09-18T19:42:22Z" finished-at="2014-09-18T19:42:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSub(int, int, int)[pri:0, instance:testNg.ParamTestWithDataProvider1@6d7accc9]" name="testSub" duration-ms="1" started-at="2014-09-18T19:42:22Z" data-provider="calcTest2" finished-at="2014-09-18T19:42:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSub -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:testNg.ParamTestWithDataProvider1@6d7accc9]" name="initialize" is-config="true" duration-ms="1" started-at="2014-09-18T19:42:22Z" finished-at="2014-09-18T19:42:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSub(int, int, int)[pri:0, instance:testNg.ParamTestWithDataProvider1@6d7accc9]" name="testSub" duration-ms="1" started-at="2014-09-18T19:42:22Z" data-provider="calcTest2" finished-at="2014-09-18T19:42:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSub -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:testNg.ParamTestWithDataProvider1@6d7accc9]" name="initialize" is-config="true" duration-ms="1" started-at="2014-09-18T19:42:22Z" finished-at="2014-09-18T19:42:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSub(int, int, int)[pri:0, instance:testNg.ParamTestWithDataProvider1@6d7accc9]" name="testSub" duration-ms="0" started-at="2014-09-18T19:42:22Z" data-provider="calcTest2" finished-at="2014-09-18T19:42:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSub -->
        <test-method status="PASS" signature="testPrimeNumberChecker(java.lang.Integer, java.lang.Boolean)[pri:0, instance:testNg.ParamTestWithDataProvider1@6d7accc9]" name="testPrimeNumberChecker" duration-ms="1" started-at="2014-09-18T19:42:22Z" data-provider="test1" finished-at="2014-09-18T19:42:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPrimeNumberChecker -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:testNg.ParamTestWithDataProvider1@6d7accc9]" name="initialize" is-config="true" duration-ms="0" started-at="2014-09-18T19:42:22Z" finished-at="2014-09-18T19:42:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPrimeNumberChecker(java.lang.Integer, java.lang.Boolean)[pri:0, instance:testNg.ParamTestWithDataProvider1@6d7accc9]" name="testPrimeNumberChecker" duration-ms="1" started-at="2014-09-18T19:42:22Z" data-provider="test1" finished-at="2014-09-18T19:42:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPrimeNumberChecker -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:testNg.ParamTestWithDataProvider1@6d7accc9]" name="initialize" is-config="true" duration-ms="0" started-at="2014-09-18T19:42:22Z" finished-at="2014-09-18T19:42:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPrimeNumberChecker(java.lang.Integer, java.lang.Boolean)[pri:0, instance:testNg.ParamTestWithDataProvider1@6d7accc9]" name="testPrimeNumberChecker" duration-ms="1" started-at="2014-09-18T19:42:22Z" data-provider="test1" finished-at="2014-09-18T19:42:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPrimeNumberChecker -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:testNg.ParamTestWithDataProvider1@6d7accc9]" name="initialize" is-config="true" duration-ms="0" started-at="2014-09-18T19:42:22Z" finished-at="2014-09-18T19:42:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPrimeNumberChecker(java.lang.Integer, java.lang.Boolean)[pri:0, instance:testNg.ParamTestWithDataProvider1@6d7accc9]" name="testPrimeNumberChecker" duration-ms="1" started-at="2014-09-18T19:42:22Z" data-provider="test1" finished-at="2014-09-18T19:42:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPrimeNumberChecker -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:testNg.ParamTestWithDataProvider1@6d7accc9]" name="initialize" is-config="true" duration-ms="0" started-at="2014-09-18T19:42:22Z" finished-at="2014-09-18T19:42:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPrimeNumberChecker(java.lang.Integer, java.lang.Boolean)[pri:0, instance:testNg.ParamTestWithDataProvider1@6d7accc9]" name="testPrimeNumberChecker" duration-ms="2" started-at="2014-09-18T19:42:22Z" data-provider="test1" finished-at="2014-09-18T19:42:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[23]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPrimeNumberChecker -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:testNg.ParamTestWithDataProvider1@6d7accc9]" name="initialize" is-config="true" duration-ms="0" started-at="2014-09-18T19:42:22Z" finished-at="2014-09-18T19:42:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
      </class> <!-- testNg.ParamTestWithDataProvider1 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
